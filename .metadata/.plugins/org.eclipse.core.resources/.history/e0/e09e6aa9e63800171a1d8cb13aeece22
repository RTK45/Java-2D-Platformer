package Main;

import javax.swing.JPanel;

import gameState.GameStateManager;

import java.awt.*;
import java.awt.image.BufferedImage;
import java.awt.event.*;

@SuppressWarnings("serial")
public class Panel extends JPanel implements Runnable, KeyListener {
	//window size
	
	public static final int Width = 320;
	public static final int Height = 240;
	public static final int Scale = 2;
	// game Stuffs
	private Thread thread;
	private boolean running;
	private int FPS = 60;
	private long targetTime = 1000/FPS;
	
	//Image
	private BufferedImage image;
	private Graphics2D g;
	
	
	private GameStateManager GSM;
	public Panel(){
		super();
		setPreferredSize(new Dimension(Width * Scale, Height * Scale));
		setFocusable(true);
		requestFocus();
	}
	
	public void addNotify(){
		super.addNotify();
		if (thread == null){
			thread = new Thread(this);
			addKeyListener(this);
			thread.start();
		}
	}
	private void init(){
		image = new BufferedImage(Width, Height , BufferedImage.TYPE_INT_RGB);
		g = (Graphics2D) image.getGraphics();
		running = true;
		GSM = new GameStateManager();
	}
	public void run(){
		
		init();
		long start;
		long elapsed;
		long wait;
		
		while(running){
			
			start = System.nanoTime();
			
			update();
			draw();
			drawToScreen();
			
			elapsed = System.nanoTime() - start;
			
			wait = targetTime - elapsed / 1000000;
			
			try {
				thread.sleep(wait);
			}
			catch(Exception e){
				e.printStackTrace(); 
			}
			
		}
		
		
	}
	private void update(){
		GSM.update();
	}
	private void draw(){
	GSM.draw(g);
		
	}
	private void drawToScreen(){
		Graphics g2 = getGraphics();
		g2.drawImage(image,0,0,null);
		g2.dispose();
	}
	
	public void keyTyped(KeyEvent key){
		
	}
	public void keyPressed(KeyEvent key){
		GSM.keyPressed(key.getKeyCode());
	}
	public void keyReleased(KeyEvent key){
		GSM.keyReleased(key.getKeyCode());
	}
}
